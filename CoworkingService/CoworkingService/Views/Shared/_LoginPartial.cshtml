@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{ 
    string userName = "";
    if(User.Identity.IsAuthenticated)
        userName = UserManager.GetUserAsync(User).GetAwaiter().GetResult().Name;
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="User" asp-action="Profile">@Localizer["Hello"] @userName!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">@Localizer["Logout"]</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Auth" asp-action="Register">@Localizer["Register"]</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Auth" asp-action="Login">@Localizer["Login"]</a>
        </li>
    }
</ul>


